?GGPLOT()
?ggplot()
install.packages(ggplot2)
install.packages("ggplot2")
?ggplot2
?ggplot
?ggplot()
?ggplot2()
?ggplot()
??ggplot()
??ggplot2()
plot(cars)
head(mpg)
head(mpg_modified)
load("C:/Users/awelsh/Data Class Folder/R_Analysis/01_Demo/.RData")
View(demo_table)
View(demo_table2)
View(demo_table3)
View(filter_table)
View(filter_table2)
View(long_table)
View(summarize_demo)
View(wide_table)
mpg <- read.csv('mpg_modified.csv')
head(mpg)
head(mpg)
View(mpg)
View(mpg)
View(mpg)
View(mpg)
head(mpg)
mpg <-""
head(mpg)
data()
data(package = .packages(all.available = TRUE))
install.packages("ggplot2")
data(mpg)
packageVersion("ggplot2")
library("ggplot2")
rm(mpg)
library("ggplot2")
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
?geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plot(cars)
head(mpg)
library(dplyr)
library(dplyr)
library(tidyverse)
library(ggplot2)
plot(cars)
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
#create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
#import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
#plot a bar plot
plt + geom_col()
#create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
head(mpg_summary)
#import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
#plot a bar plot
plt + geom_col()
#create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
# head(mpg_summary)
#import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
#plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
#create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
# head(mpg_summary)
#import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
#plot a bar plot with x and y labels (and rotate x axis labels)
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +
theme(axis.text.x=element_text(angle=45, hjust=1))
# Create summary table
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
# import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
# Create summary table
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
# import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
plt + geom_line()
# Create summary table
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
# import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
# add line plot with labels
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30))
# import dataset into ggplot2
plt <- ggplot(mpg,aes(x=displ,y=cty))
# add scatter plot with labels
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
# import dataset into ggplot2
plt <- ggplot(mpg,aes(x=displ,y=cty, color=class))
# add scatter plot with labels
plt + geom_point() + labs(x ="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color = "Vehicle Class")
# import dataset into ggplot2
plt <- ggplot(mpg,aes(x=displ,y=cty, color=class, shape=drv))
# add scatter plot with labels
plt + geom_point() + labs(x ="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color = "Vehicle Class", shape = "Type of Drive")
View(summarize_demo)
data(mpg)
force(mpg)
View(mpg)
View(mpg)
# import dataset into ggplot2
plt <- ggplot(mpg,aes(x=year,y=displ, size=cty))
# add scatter plot with labels
plt + geom_point() + labs(x ="Vehicle Year", y="Engline Size (L)", size="City Fuel-Efficiency (MPG)")
# import dataset into ggplot2
plt <- ggplot(mpg,aes(x=cyl,y=displ, size=cty))
# add scatter plot with labels
plt + geom_point() + labs(x ="Engine Cylinders", y="Engline Size (L)", size="City Fuel-Efficiency (MPG)")+ scale_x_discrete(limits=c(4,6,8))
#import dataset into ggplot2
plt <- ggplot(mpg,aes(y=hwy))
#add boxplot
plt + geom_boxplot()
#import dataset into ggplot2
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
#add boxplot and rotate xaxis labels
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
#import dataset into ggplot2
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
#add boxplot and rotate xaxis labels
plt + geom_boxplot(fill = "white", colour = "orange") + theme(axis.text.x=element_text(angle=45,hjust=1))
#import dataset into ggplot2
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
#add boxplot and rotate xaxis labels
plt + geom_boxplot(fill = "white", colour = "orange", outlier.colour="red", outlier.shape=1) + theme(axis.text.x=element_text(angle=45,hjust=1))
#import dataset into ggplot2
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
#add boxplot and rotate xaxis labels
plt + geom_boxplot(fill = "white", colour = drv, outlier.colour="red", outlier.shape=1) + theme(axis.text.x=element_text(angle=45,hjust=1))
#import dataset into ggplot2
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy, colour=drv))
#add boxplot and rotate xaxis labels
plt + geom_boxplot(fill = "white", outlier.colour="red", outlier.shape=1) + theme(axis.text.x=element_text(angle=45,hjust=1))
#create summary table
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
#create heatmap with labels
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
#head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
library(dplyr)
library(tidyverse)
library(ggplot2)
?chisq.test
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
library(dplyr)
MechaCar <- read.csv('MechaCar_mpg.csv')
head(MechaCar)
MechaCar <- read.csv('MechaCar_mpg.csv')
setwd("C:/Users/awelsh/Data Class Folder/MechaCar_Statistical_Analysis")
MechaCar <- read.csv('MechaCar_mpg.csv')
head(MechaCar)
View(MechaCar)
View(MechaCar)
#generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar)
# generate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar))
library(dplyr)
MechaCar <- read.csv('MechaCar_mpg.csv')
head(MechaCar)
library(dplyr)
MechaCar <- read.csv('MechaCar_mpg.csv')
head(MechaCar)
#generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar)
# generate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar))
suppressMessages(library(dplyr))
MechaCar <- read.csv('MechaCar_mpg.csv')
head(MechaCar)
#generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar)
# generate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar))
suppressMessages(library(dplyr))
MechaCar <- read.csv('../ResourcesMechaCar_mpg.csv')
MechaCar <- read.csv('./Resources/MechaCar_mpg.csv')
head(MechaCar)
# generate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar))
# Mecha Car Challenge
## Deliverable 1
---
title: "R Notebook"
output: html_notebook
suppressMessages(library(dplyr))
MechaCar <- read.csv('./Resources/MechaCar_mpg.csv')
head(MechaCar)
#generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar)
# generate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar))
View(MechaCar)
View(MechaCar)
setwd("C:/Users/awelsh/Data Class Folder/MechaCar_Statistical_Analysis")
MechaCar <- read.csv('./Resources/Suspension_Coil.csv')
head(MechaCar)
Suspension <- read.csv('./Resources/Suspension_Coil.csv')
head(Suspension)
MechaCar <- read.csv('./Resources/MechaCar_mpg.csv')
head(MechaCar)
View(Suspension)
View(Suspension)
total_summary <- summarize(Suspension)
View(total_summary)
View(total_summary)
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(tidyverse))
total_summary <- summarize(Suspension)
total_summary <- summarize(Suspension$PSI)
?Summarize()
?summarize()
total_summary <- summarize(Suspension$PSI, meanPSI = mean(Suspension$PSI))
total_summary <- Suspension %>% summarize(meanPSI = mean(Suspension$PSI))
View(total_summary)
View(total_summary)
total_summary <- Suspension %>% summarize(meanPSI = mean(Suspension$PSI)
medianPSI = median(Suspension$PSI)
total_summary <- Suspension %>% summarize(meanPSI = mean(Suspension$PSI),
medianPSI = median(Suspension$PSI),
variancePSI = var(Suspension$PSI),
SD_PSI = sd(Suspension$PSI))
View(total_summary)
View(total_summary)
# create summary statiscics by manufacturing lot
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(mean_lot = mean(Suspension$PSI),
median_lot = medianPSImedian(Suspension$PSI),
variance_lot = var(Suspension$PSI),
SD_lot = sd(Suspension$PSI)))
# create summary statiscics by manufacturing lot
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(mean_lot = mean(Suspension$PSI),
median_lot = medianPSImedian(Suspension$PSI),
variance_lot = var(Suspension$PSI),
SD_lot = sd(Suspension$PSI))
# create summary statistics table
total_summary <- Suspension %>% summarize(meanPSI = mean(Suspension$PSI),
medianPSI = median(Suspension$PSI),
variancePSI = var(Suspension$PSI),
SD_PSI = sd(Suspension$PSI))
View(total_summary)
View(total_summary)
# create summary statiscics by manufacturing lot
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(mean_lot = mean(Suspension$PSI),
median_lot = median(Suspension$PSI),
variance_lot = var(Suspension$PSI),
SD_lot = sd(Suspension$PSI))
View(lot_summary)
View(lot_summary)
# create summary statiscics by manufacturing lot
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(mean_lot = mean(Suspension$PSI),
median_lot = median(PSI),
variance_lot = var(PSI),
SD_lot = sd(PSI))
View(lot_summary)
View(lot_summary)
# create summary statiscics by manufacturing lot
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(mean_lot = mean(Suspension$PSI),
median_lot = median(PSI),
variance_lot = var(PSI),
SD_lot = sd(PSI), .groups="keep")
View(lot_summary)
View(lot_summary)
# create summary statistics table
total_summary <- Suspension %>% summarize(meanPSI = mean(Suspension$PSI),
medianPSI = median(Suspension$PSI),
variancePSI = var(Suspension$PSI),
SD_PSI = sd(Suspension$PSI))
View(total_summary)
View(total_summary)
# create summary statiscics by manufacturing lot
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(mean_lot = mean(PSI),
median_lot = median(PSI),
variance_lot = var(PSI),
SD_lot = sd(PSI), .groups="keep")
View(lot_summary)
View(lot_summary)
# perform a t-test to determine if the PSI across all manufacturing lots is statistically different from the pop mean
t.test(MechaCar$PSI, mu=1500)
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(tidyverse))
# Read in csv file
MechaCar <- read.csv('./Resources/MechaCar_mpg.csv')
head(MechaCar)
#generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar)
# read in csv data file
Suspension <- read.csv('./Resources/Suspension_Coil.csv')
head(Suspension)
# create summary statistics table
total_summary <- Suspension %>% summarize(meanPSI = mean(Suspension$PSI),
medianPSI = median(Suspension$PSI),
variancePSI = var(Suspension$PSI),
SD_PSI = sd(Suspension$PSI))
# create summary statiscics by manufacturing lot
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(mean_lot = mean(PSI),
median_lot = median(PSI),
variance_lot = var(PSI),
SD_lot = sd(PSI), .groups="keep")
# perform a t-test to determine if the PSI across all manufacturing lots is statistically different from the pop mean
t.test(MechaCar$PSI, mu=1500)
# perform a t-test to determine if the PSI across all manufacturing lots is statistically different from the pop mean
t.test(Suspension$PSI, mu=1500)
